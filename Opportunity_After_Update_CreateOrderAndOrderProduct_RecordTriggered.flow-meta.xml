<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <assignments>
        <description>Add every Order Product record into the list of Order Product.</description>
        <name>AddInputToList</name>
        <label>AddInputToList</label>
        <locationX>138</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>orderProductList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>orderProductRec</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>OpportunityLineItems</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>This is used to handle the error.</description>
        <name>HandleError</name>
        <label>HandleError</label>
        <locationX>314</locationX>
        <locationY>1163</locationY>
        <assignmentItems>
            <assignToReference>txtFaultError</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Set values to Order Product.</description>
        <name>SetValuesToOrderProduct</name>
        <label>SetValuesToOrderProduct</label>
        <locationX>138</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>orderProductRec.OrderId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CreateOrderRecord</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>orderProductRec.ListPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OpportunityLineItems.ListPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>orderProductRec.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OpportunityLineItems.UnitPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>orderProductRec.Product2Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OpportunityLineItems.Product2.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>orderProductRec.TotalPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OpportunityLineItems.TotalPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>orderProductRec.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OpportunityLineItems.Quantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>orderProductRec.PricebookEntryId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OpportunityLineItems.PricebookEntryId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddInputToList</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Check whether we are getting Opportunity Line Item or not.</description>
        <name>CheckNotNull</name>
        <label>CheckNotNull</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>IsNull</defaultConnectorLabel>
        <rules>
            <name>IsNotNull</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetOppLineItem</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>OpportunityLineItems</targetReference>
            </connector>
            <label>IsNotNull</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <description>This is used to store the current date.</description>
        <name>todaysDate</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <interviewLabel>Opportunity-After-Update-CreateOrderAndOrderProduct-RecordTriggered {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity-After-Update-CreateOrderAndOrderProduct-RecordTriggered</label>
    <loops>
        <description>Iterate over each Opportunity Line Item which is related to the given Opportunity.</description>
        <name>OpportunityLineItems</name>
        <label>OpportunityLineItems</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <collectionReference>GetOppLineItem</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>SetValuesToOrderProduct</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CreateOrderProduct</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Create Order Product record whenever Opportunity is Closed Won.</description>
        <name>CreateOrderProduct</name>
        <label>CreateOrderProduct</label>
        <locationX>50</locationX>
        <locationY>1055</locationY>
        <faultConnector>
            <targetReference>HandleError</targetReference>
        </faultConnector>
        <inputReference>orderProductList</inputReference>
    </recordCreates>
    <recordCreates>
        <description>Create Order record whenever Opportunity is Closed Won.</description>
        <name>CreateOrderRecord</name>
        <label>CreateOrderRecord</label>
        <locationX>314</locationX>
        <locationY>323</locationY>
        <connector>
            <targetReference>GetOppLineItem</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>HandleError</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCity</field>
            <value>
                <elementReference>$Record.Account.BillingCity</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCountry</field>
            <value>
                <elementReference>$Record.Account.BillingCountry</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingLatitude</field>
            <value>
                <elementReference>$Record.Account.BillingLatitude</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingLongitude</field>
            <value>
                <elementReference>$Record.Account.BillingLongitude</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingPostalCode</field>
            <value>
                <elementReference>$Record.Account.BillingPostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingState</field>
            <value>
                <elementReference>$Record.Account.BillingState</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingStreet</field>
            <value>
                <elementReference>$Record.Account.BillingStreet</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CompanyAuthorizedById</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContractId</field>
            <value>
                <elementReference>$Record.Contract.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CustomerAuthorizedById</field>
            <value>
                <elementReference>$Record.Account.PersonContact.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EffectiveDate</field>
            <value>
                <elementReference>todaysDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Pricebook2Id</field>
            <value>
                <elementReference>$Record.Pricebook2.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ShippingCity</field>
            <value>
                <elementReference>$Record.Account.ShippingCity</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ShippingCountry</field>
            <value>
                <elementReference>$Record.Account.ShippingCountry</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ShippingLatitude</field>
            <value>
                <elementReference>$Record.Account.ShippingLatitude</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ShippingLongitude</field>
            <value>
                <elementReference>$Record.Account.ShippingLongitude</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ShippingPostalCode</field>
            <value>
                <elementReference>$Record.Account.ShippingPostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ShippingState</field>
            <value>
                <elementReference>$Record.Account.ShippingState</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ShippingStreet</field>
            <value>
                <elementReference>$Record.Account.ShippingStreet</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Draft</stringValue>
            </value>
        </inputAssignments>
        <object>Order</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>Get all Opportunity Line Item related to the given Opportunity.</description>
        <name>GetOppLineItem</name>
        <label>GetOppLineItem</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckNotNull</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>HandleError</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OpportunityLineItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>CreateOrderRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Closed Won</stringValue>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>SyncedQuoteId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>This is used to store the list of Order Product records.</description>
        <name>orderProductList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OrderItem</objectType>
    </variables>
    <variables>
        <description>This is used to store Order Product record.</description>
        <name>orderProductRec</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OrderItem</objectType>
    </variables>
    <variables>
        <description>This is used to store the error.</description>
        <name>txtFaultError</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
